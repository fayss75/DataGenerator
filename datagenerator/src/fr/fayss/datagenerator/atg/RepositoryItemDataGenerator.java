package fr.fayss.datagenerator.atg;

import java.util.List;

import lombok.Getter;
import lombok.Setter;
import fr.fayss.datagenerator.DataConfiguration;
import fr.fayss.datagenerator.DataGenerator;


/**
 * Generate an add item script
 * 
 * example : 
 * <add-item item-descriptor="ITEM_DESCRIPTOR_NAME" id="ITEM_ID">
 *  	<set-property name="PROP_NAME1">PROP_VALUE1</set-property>
 *		<set-property name="PROP_NAME2">PROP_VALUE2</set-property>
 *		<set-property name="PROP_NAME3">PROP_VALUE3</set-property>
 *		<set-property name="PROP_NAME4">PROP_VALUE4</set-property>
 * 	</add-item>
 * 
 * Each property name/value is generated by its own @PropertyDataGenerator
 *  
 * @author fayss
 *
 */
public @Getter @Setter class RepositoryItemDataGenerator implements DataGenerator{

	
	public String mItemName;
	public List<DataGenerator> mPropertyList ;
	
	public DataGenerator mIdGenerator ;
	
	public RepositoryItemDataGenerator (String pItemName,List<DataGenerator> propertyList ,DataGenerator pIdGenerator ) {
		mItemName = pItemName;
		mPropertyList = propertyList;
		mIdGenerator = pIdGenerator;
		
	}
	
	public void generateProperty (StringBuilder pStringBuilder) {
		for (DataGenerator property : mPropertyList) {
			pStringBuilder.append(property.generate());
		}
	}
	
	@Override
	public Object generate() {
		
		StringBuilder sb = new StringBuilder();
		
		sb.append("<add-item item-descriptor=\"").append(mItemName)
		.append("\" id=\"").append(mIdGenerator.generate())
		.append("\">\n");
		
		 generateProperty (sb);
		
		 sb.append("</add-item>\n");
		return sb.toString();
	}
	
	@Override
	public void configure(DataConfiguration pDataconfig) {
		// TODO Auto-generated method stub
		
	}

}
